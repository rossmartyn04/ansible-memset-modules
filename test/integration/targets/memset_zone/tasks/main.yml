- name: create random string
  set_fact:
    zone_name: "{{ random_string | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}.ansible.example.com"

- name: create zone with incorrect API key
  local_action:
    module: memset_zone
    api_key: "wa9aerahhie0eekee9iaphoorovooyia"
    state: present
    name: "{{ zone_name }}"
    ttl: 300
  ignore_errors: true
  register: result

- assert:
    that:
      - "'Memset API returned a 403 response (ApiErrorForbidden, Bad api_key)' in result.msg"
      - result is not successful

- name: test creating zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: present
    name: "{{ zone_name }}"
    ttl: 300
  check_mode: true
  register: result

- assert:
    that:
      - result is changed
      - result is successful

- name: create zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: present
    name: "{{ zone_name }}"
    ttl: 300
  register: result

- assert:
    that:
      - result is changed
      - result is successful

- name: test deleting zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: absent
    name: "{{ zone_name }}"
  check_mode: true
  register: result

- assert:
    that:
      - result is changed
      - result is successful

# this should succeed
- name: delete empty zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: absent
    name: "{{ zone_name }}"
    force: false
  register: result

- assert:
    that:
      - result is changed
      - result is successful

# this should succeed
- name: create zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: present
    name: "{{ zone_name }}"
  register: result

- assert:
    that:
      - result is changed
      - result is successful

# this should show no change or failure
- name: create duplicate zone
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: present
    name: "{{ zone_name }}"
  register: result

- assert:
    that:
      - result is not changed

- name: delete zone with force
  local_action:
    module: memset_zone
    api_key: "{{ api_key }}"
    state: absent
    name: "{{ zone_name }}"
    force: true
  register: result

- assert:
    that:
      - result is changed
      - result is successful
